name: Update Sound Generator

on:
  schedule:
    - cron: "0 0 * * *" # Every day at midnight UTC
  workflow_dispatch:

jobs:
  update_sounds:
    runs-on: ubuntu-latest
    steps:
      - name: Enable debug (set -x)
        run: set -x

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyttsx3 soundfile numpy

      - name: Install ffmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Install espeak
        run: sudo apt-get update && sudo apt-get install -y espeak

      - name: Generate Gemini prompt file
        run: |
          echo "===== gemini_prompt.txt ====="
          cat gemini_prompt.txt | tee /tmp/gemini_prompt.txt
          cp gemini_prompt.txt prompt_final.txt
          echo "" >> prompt_final.txt
          cat generator.py >> prompt_final.txt
          echo "===== prompt_final.txt ====="
          cat prompt_final.txt | tee /tmp/prompt_final.txt

      - name: Call Gemini 2.0 Flash to update code (debug)
        env:
          GEMINI_API_TOKEN: ${{ secrets.GEMINI_API_TOKEN }}
        run: |
          echo "===== Gemini API Request Payload ====="
          PAYLOAD=$(jq -n \
            --arg prompt "$(cat prompt_final.txt)" \
            '{ contents: [ { role: "user", parts: [ { text: $prompt } ] } ] }')
          echo "$PAYLOAD" | tee /tmp/gemini_payload.json
          echo "===== Curl Request ====="
          set -x
          RESPONSE=$(curl -v -X POST "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=$GEMINI_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD" | tee /tmp/gemini_response.json)
          set +x
          echo "===== Gemini API Raw Response ====="
          cat /tmp/gemini_response.json
          echo "===== Extracted Gemini Response ====="
          # Remove markdown code block markers before saving to generator.py
          echo "$RESPONSE" | jq -r '.candidates[0].content.parts[0].text' | sed '/^```/d' | tee generator.py

      - name: Show updated Python script
        run: |
          echo "===== Updated generator.py ====="
          cat generator.py

      - name: Run updated Python script to generate sounds
        run: |
          python -u generator.py

      - name: Show generated sounds directory
        run: |
          echo "===== sounds directory tree ====="
          ls -lR sounds/

      - name: Commit and push changes
        env:
          REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add generator.py sounds/
          git commit -m "Auto-update sounds and code via Gemini 2.0 Flash" || echo "No changes to commit"
          git push https://x-access-token:${REPO_TOKEN}@github.com/${{ github.repository }} HEAD:main